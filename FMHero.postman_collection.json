{
	"info": {
		"_postman_id": "1a2b46a0-81ad-4f8c-8756-340e4f0e3cd6",
		"name": "FMHero",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Badge",
			"item": [
				{
					"name": "Badge.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/badges",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"badges"
							]
						}
					},
					"response": []
				},
				{
					"name": "User.Badge.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/users/:user_id/badges",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users",
								":user_id",
								"badges"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "me"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Badge.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/badges/:badge",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"badges",
								":badge"
							],
							"variable": [
								{
									"key": "badge",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Badge.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "badge_category_id",
									"value": "1",
									"description": "required|int|exists:badge_categories,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "A Fake Badge",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Some kind of badge description",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "caption",
									"value": "A Caption",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "10,000",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/badges",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"badges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Badge.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "badge_category_id",
									"value": "1",
									"description": "int|exists:badge_categories,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "A Fake Badge",
									"description": "string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Some kind of badge description",
									"description": "string",
									"type": "text"
								},
								{
									"key": "caption",
									"value": "A Caption",
									"description": "string",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "10,000",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/badges/:badge",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"badges",
								":badge"
							],
							"variable": [
								{
									"key": "badge",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Badge.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/badges/:badge",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"badges",
								":badge"
							],
							"variable": [
								{
									"key": "badge",
									"value": "44"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Company.User.Attach",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "user_id",
											"value": "3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/companies/:company_id/user",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"companies",
										":company_id",
										"user"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Company.User.Detach",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "user_id",
											"value": "2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/companies/:company_id/user",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"companies",
										":company_id",
										"user"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Company.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/companies",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Company",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/companies/:company_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"companies",
								":company_id"
							],
							"variable": [
								{
									"key": "company_id",
									"value": "29"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Company.Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/certifications/:certification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"certifications",
								":certification_id"
							],
							"variable": [
								{
									"key": "certification_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Company.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Company\",\r\n    \"user_id\": \"2\",\r\n    \"address\": {\r\n        \"name\": \"primary\",\r\n        \"province\": \"NY\",\r\n        \"line1\": \"123 Fake Street\",\r\n        \"line2\": \"Unit 123\",\r\n        \"city\": \"Springfield\",\r\n        \"postal_code\": \"H0H 0H0\",\r\n        \"country\": \"USA\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/companies",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Company\",\r\n    \"address\": {\r\n        \"name\": \"primary\",\r\n        \"province\": \"NY\",\r\n        \"line1\": \"123 Fake Street\",\r\n        \"line2\": \"Unit 123\",\r\n        \"city\": \"Springfield\",\r\n        \"postal_code\": \"H0H 0H0\",\r\n        \"country\": \"USA\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/companies/:company_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"companies",
								":company_id"
							],
							"variable": [
								{
									"key": "company_id",
									"value": "29"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Certification",
			"item": [
				{
					"name": "Certification.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Site",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/certifications",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"certifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Certification.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Site",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/certifications/:certification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"certifications",
								":certification_id"
							],
							"variable": [
								{
									"key": "certification_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Certification.Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Site",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/certifications/:certification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"certifications",
								":certification_id"
							],
							"variable": [
								{
									"key": "certification_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Certification.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "2",
									"description": "required|exists:users,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "A Certification",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "type",
									"value": "A Certification Type",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "number",
									"value": "ABC123",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "is_expirable",
									"value": "1",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "expires_at",
									"value": "2050-01-01",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Some Notes",
									"description": "required|string|size:2|province'",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/certifications",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"certifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Certification.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"description": "required|exists:users,id",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "A Certification",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "type",
									"value": "A Certification Type",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "number",
									"value": "ABC123",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "is_expirable",
									"value": "1",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "expires_at",
									"value": "01/02/2050",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Some Notes",
									"description": "required|string|size:2|province'",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/certifications/:certification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"certifications",
								":certification_id"
							],
							"variable": [
								{
									"key": "certification_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contact",
			"item": [
				{
					"name": "Contact.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/contacts",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Contact.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/contacts/:contact_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"contacts",
								":contact_id"
							],
							"variable": [
								{
									"key": "contact_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Contact.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "contact_user_id",
									"value": "2",
									"description": "required|exists:users,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Some Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/contacts",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Contact.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "contact_user_id",
									"value": "2",
									"description": "required|exists:users,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Some Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/contacts/:contact_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"contacts",
								":contact_id"
							],
							"variable": [
								{
									"key": "contact_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Contact.Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "contact_user_id",
									"value": "2",
									"description": "required|exists:users,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Some Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/contacts",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cylinder Asset",
			"item": [
				{
					"name": "Manufacturers",
					"item": [
						{
							"name": "Cylinder Assets.Manufacturer.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cylinder Assets.Manufacturer.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers/:cylinder_asset_manufacturer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers",
										":cylinder_asset_manufacturer"
									],
									"variable": [
										{
											"key": "cylinder_asset_manufacturer",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cylinder Assets.Manufacturer.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "A name",
											"description": "required|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cylinder Assets.Manufacturer.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Name",
											"description": "requied|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers/:cylinder_asset_manufacturer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers",
										":cylinder_asset_manufacturer"
									],
									"variable": [
										{
											"key": "cylinder_asset_manufacturer",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cylinder Assets.Manufacturer.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers/:cylinder_asset_manufacturer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers",
										":cylinder_asset_manufacturer"
									],
									"variable": [
										{
											"key": "cylinder_asset_manufacturer",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cylinder Asset.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/cylinder_assets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"cylinder_assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cylinder Asset.Get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/cylinder_assets/:cylinder_asset",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"cylinder_assets",
								":cylinder_asset"
							],
							"variable": [
								{
									"key": "cylinder_asset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cylinder Asset.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "2",
									"description": "sometimes|int|exists:users,id|is_or_can:store,CylinderAsset",
									"type": "text"
								},
								{
									"key": "cylinder_asset_manufacturer_id",
									"value": "1",
									"description": "required|int|exists:cylinder_asset_manufacturers,id",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "Site",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "cylinder_size",
									"value": "20",
									"description": "required|integer",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "ABC123",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "tag_number",
									"value": "123#abc",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "Disposable",
									"description": "required|in:Disposable,Refillable,Recovery",
									"type": "text"
								},
								{
									"key": "purity_label",
									"value": "Pure",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "manufactured_at",
									"value": "2020-01-20",
									"description": "required|date",
									"type": "text"
								},
								{
									"key": "tare_weight",
									"value": "10",
									"description": "required|numeric",
									"type": "text"
								},
								{
									"key": "last_recertification_at",
									"value": "2020-02-20",
									"description": "required|date|after:manufactured_at",
									"type": "text"
								},
								{
									"key": "current_gas_weight",
									"value": "20",
									"description": "required|integer",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "CylinderCo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/cylinder_assets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"cylinder_assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cylinder Asset.Transfer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "2",
									"description": "sometimes|int|exists:users,id|is_or_can:store,CylinderAsset",
									"type": "text"
								},
								{
									"key": "cylinder_asset_manufacturer_id",
									"value": "1",
									"description": "required|int|exists:cylinder_asset_manufacturers,id",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "Site",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "cylinder_size",
									"value": "20",
									"description": "required|integer",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "ABC123",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "tag_number",
									"value": "123#abc",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "Disposable",
									"description": "required|in:Disposable,Refillable,Recovery",
									"type": "text"
								},
								{
									"key": "purity_label",
									"value": "Pure",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "manufactured_at",
									"value": "2020-01-20",
									"description": "required|date",
									"type": "text"
								},
								{
									"key": "tare_weight",
									"value": "10",
									"description": "required|numeric",
									"type": "text"
								},
								{
									"key": "last_recertification_at",
									"value": "2020-02-20",
									"description": "required|date|after:manufactured_at",
									"type": "text"
								},
								{
									"key": "current_gas_weight",
									"value": "20",
									"description": "required|integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/cylinder_assets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"cylinder_assets"
							]
						},
						"description": "This route will take either a user_id or a site_id, and will transfer the cylinder asset if it is owned by the user in question. Note if the user_id is present, it will transfer that cylinder to the user in question and not consider the site_id. The user transferring the cylinder WILL lose access to this cylinder if they transfer it either to a user or a site."
					},
					"response": []
				},
				{
					"name": "Cylinder Asset.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cylinder_asset_manufacturer_id",
									"value": "1",
									"description": "required|int|exists:cylinder_asset_manufacturers,id",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "ServiceEventRepair",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "cylinder_size",
									"value": "20",
									"description": "required|integer",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "ABC123",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "tag_number",
									"value": "123#abc",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "Disposable",
									"description": "required|in:Disposable,Refillable,Recovery",
									"type": "text"
								},
								{
									"key": "purity_label",
									"value": "Pure",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "manufactured_at",
									"value": "2020-01-20",
									"description": "required|date",
									"type": "text"
								},
								{
									"key": "tare_weight",
									"value": "10",
									"description": "required|numeric",
									"type": "text"
								},
								{
									"key": "last_recertification_at",
									"value": "2020-02-20",
									"description": "required|date|after:manufactured_at",
									"type": "text"
								},
								{
									"key": "current_gas_weight",
									"value": "20",
									"description": "required|integer",
									"type": "text"
								},
								{
									"key": "user_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/cylinder_assets/:cylinder_asset",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"cylinder_assets",
								":cylinder_asset"
							],
							"variable": [
								{
									"key": "cylinder_asset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cylinder Asset.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/cylinder_assets/:cylinder_asset",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"cylinder_assets",
								":cylinder_asset"
							],
							"variable": [
								{
									"key": "cylinder_asset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Equipment Asset",
			"item": [
				{
					"name": "Manufacturer",
					"item": [
						{
							"name": "Equipment Assets.Manufacturer.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/equipment_assets/manufacturers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										"manufacturers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Manufacturer.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers/:cylinder_asset_manufacturer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers",
										":cylinder_asset_manufacturer"
									],
									"variable": [
										{
											"key": "cylinder_asset_manufacturer",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Manufacturer.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "A name",
											"description": "required|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Manufacturer.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Name",
											"description": "requied|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers/:cylinder_asset_manufacturer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers",
										":cylinder_asset_manufacturer"
									],
									"variable": [
										{
											"key": "cylinder_asset_manufacturer",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Manufacturer.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/cylinder_assets/manufacturers/:cylinder_asset_manufacturer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"cylinder_assets",
										"manufacturers",
										":cylinder_asset_manufacturer"
									],
									"variable": [
										{
											"key": "cylinder_asset_manufacturer",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Classification",
					"item": [
						{
							"name": "Equipment Assets.Classification.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/equipment_assets/classifications",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										"classifications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Classification.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/equipment_assets/classifications/:cylinder_asset_classification",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										"classifications",
										":cylinder_asset_classification"
									],
									"variable": [
										{
											"key": "cylinder_asset_classification",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Classification.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "A name",
											"description": "required|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/equipment_assets/classifications",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										"classifications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Classification.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Name",
											"description": "requied|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/equipment_assets/classifications/:cylinder_asset_classification",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										"classifications",
										":cylinder_asset_classification"
									],
									"variable": [
										{
											"key": "cylinder_asset_classification",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Assets.Classification.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/equipment_assets/classifications/:cylinder_asset_classification",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										"classifications",
										":cylinder_asset_classification"
									],
									"variable": [
										{
											"key": "cylinder_asset_classification",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Circuit",
					"item": [
						{
							"name": "Equipment Asset.Circuit.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"test\",\r\n    \"charge\" : 1,\r\n    \"notes\" : \"Something or other\",\r\n    \"gases\" : [\r\n        {\r\n            \"gas_id\" : 1,\r\n            \"purity\" : \"80\"\r\n        },\r\n        {\r\n            \"gas_id\" : 2,\r\n            \"purity\" : \"8\"\r\n        },\r\n        {\r\n            \"gas_id\" : 3,\r\n            \"purity\" : \"7\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/equipment_assets/:equipment_asset/circuits",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										":equipment_asset",
										"circuits"
									],
									"variable": [
										{
											"key": "equipment_asset",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Equipment Asset.Circuit.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"test\",\r\n    \"gases\" : [\r\n        {\r\n            \"gas_id\" : 1,\r\n            \"purity\" : \"80\"\r\n        },\r\n        {\r\n            \"gas_id\" : 2,\r\n            \"purity\" : \"8\"\r\n        },\r\n        {\r\n            \"gas_id\" : 3,\r\n            \"purity\" : \"7\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/equipment_assets/:equipment_asset/circuits/:equipment_asset_circuit",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"equipment_assets",
										":equipment_asset",
										"circuits",
										":equipment_asset_circuit"
									],
									"variable": [
										{
											"key": "equipment_asset",
											"value": "52"
										},
										{
											"key": "equipment_asset_circuit",
											"value": "96"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Equipment Asset.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/equipment_assets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"equipment_assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Equipment Asset.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/equipment_assets/:equipment_asset",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"equipment_assets",
								":equipment_asset"
							],
							"variable": [
								{
									"key": "equipment_asset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Equipment Asset.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_type",
									"value": "ServiceEvent",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Test",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "model",
									"value": "aefg",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "serial",
									"value": "ggeg",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "alias",
									"value": "Tester",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "equipment_classification_id",
									"value": "1",
									"description": "required|integer|exists:equipment_asset_classifications,id",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "1",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "1",
									"description": "required|integer|exists:gases,id",
									"type": "text"
								},
								{
									"key": "regulatory_class",
									"value": "Comfort Cooling",
									"description": "nullable|in:Comfort Cooling,Industrial Process Cooling,Other,Refrigeration",
									"type": "text"
								},
								{
									"key": "operational_status",
									"value": "",
									"description": "nullable|in:Disposed/Destroyed,Mothballed,Normal Operation,Pending Repair All Gas Removed,Planned Retirement,Planned Retrofit,Interim Non-Operation,Seasonal Non-Operation,Seasonal Operation,Shutdown,Sold,Under Repair",
									"type": "text"
								},
								{
									"key": "oil_type",
									"value": "",
									"description": "nullable|in:AB,POE,Mineral",
									"type": "text"
								},
								{
									"key": "classification_other",
									"value": "",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "manufactured_at",
									"value": "",
									"description": "nullable|date",
									"type": "text"
								},
								{
									"key": "acquired_at",
									"value": "",
									"description": "nullable|date|after:manufactured_at",
									"type": "text"
								},
								{
									"key": "room_area",
									"value": "",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "long",
									"value": "",
									"description": "nullable|numeric",
									"type": "text"
								},
								{
									"key": "lat",
									"value": "",
									"description": "nullable|numeric",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "shutdown_at",
									"value": "",
									"description": "nullable|date",
									"type": "text"
								},
								{
									"key": "model_year",
									"value": "1990",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/equipment_assets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"equipment_assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Equipment Asset.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_type",
									"value": "ServiceEvent",
									"description": "morphable",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"description": "morphable",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Test",
									"description": "string",
									"type": "text"
								},
								{
									"key": "model",
									"value": "aefg",
									"description": "string",
									"type": "text"
								},
								{
									"key": "serial",
									"value": "ggeg",
									"description": "string",
									"type": "text"
								},
								{
									"key": "alias",
									"value": "Tester",
									"description": "string",
									"type": "text"
								},
								{
									"key": "equipment_classification_id",
									"value": "1",
									"description": "integer|exists:equipment_asset_classifications,id",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "CoolCo",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "",
									"description": "integer|exists:gases,id",
									"type": "text"
								},
								{
									"key": "operational_status",
									"value": "",
									"description": "nullable|in:Disposed/Destroyed,Mothballed,Normal Operation,Pending Repair All Gas Removed,Planned Retirement,Planned Retrofit,Interim Non-Operation,Seasonal Non-Operation,Seasonal Operation,Shutdown,Sold,Under Repair",
									"type": "text"
								},
								{
									"key": "regulatory_class",
									"value": "Comfort Cooling",
									"description": "nullable|in:Comfort Cooling,Industrial Process Cooling,Other,Refrigeration",
									"type": "text"
								},
								{
									"key": "oil_type",
									"value": "",
									"description": "nullable|in:AB,POE,Mineral",
									"type": "text"
								},
								{
									"key": "classification_other",
									"value": "",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "manufactured_at",
									"value": "",
									"description": "nullable|date",
									"type": "text"
								},
								{
									"key": "acquired_at",
									"value": "",
									"description": "nullable|date|after:manufactured_at",
									"type": "text"
								},
								{
									"key": "room_area",
									"value": "",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "long",
									"value": "",
									"description": "nullable|numeric",
									"type": "text"
								},
								{
									"key": "lat",
									"value": "",
									"description": "nullable|numeric",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "shutdown_at",
									"value": "",
									"description": "nullable|date",
									"type": "text"
								},
								{
									"key": "model_year",
									"value": "1999",
									"type": "text"
								},
								{
									"key": "charge",
									"value": "1001",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/equipment_assets/:equipment_asset",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"equipment_assets",
								":equipment_asset"
							],
							"variable": [
								{
									"key": "equipment_asset",
									"value": "52"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Equipment Asset.OCR Namplate",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "manufacturer",
									"value": "CoolCo!",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "model",
									"value": "AES145",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "model_year",
									"value": "19901",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "manufactured_at",
									"value": "2008-01-01",
									"description": "nullable|date",
									"type": "text"
								},
								{
									"key": "serial",
									"value": "1233467",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "12",
									"description": "nullable|integer|exists:gases,id",
									"type": "text"
								},
								{
									"key": "factory_field_charge",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/equipment_assets/:equipment_asset/ocr_nameplate",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"equipment_assets",
								":equipment_asset",
								"ocr_nameplate"
							],
							"variable": [
								{
									"key": "equipment_asset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Equipment Asset.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/equipment_assets/:equipment_asset",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"equipment_assets",
								":equipment_asset"
							],
							"variable": [
								{
									"key": "equipment_asset",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gas Movement",
			"item": [
				{
					"name": "Gas Movement.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/gas_movements",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_movements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gas Movement.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"description": "required_with:owner_type|sometimes|int|exists:users,id|is_or_can:store,Goal",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "ServiceEventInstall",
									"description": "required_with:owner_id|morphable|ownable",
									"type": "text"
								},
								{
									"key": "to_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "from_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "to_equipment_asset_id",
									"value": "",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "from_equipment_asset_id",
									"value": "1",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "1",
									"description": "nullable|exists:gases,id",
									"type": "text"
								},
								{
									"key": "gas_purity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "gas_quantity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled",
									"value": "10",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled_unit",
									"value": "NG",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/gas_movements/:gas_movement",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_movements",
								":gas_movement"
							],
							"variable": [
								{
									"key": "gas_movement",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gas Movement.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"description": "sometimes|int|exists:users,id|is_or_can:store,Goal",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "ServiceEventInstall",
									"description": "required_with:owner_id|morphable|ownable",
									"type": "text"
								},
								{
									"key": "to_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "from_cylinder_asset_id",
									"value": "1",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "to_equipment_asset_id",
									"value": "1",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "from_equipment_asset_id",
									"value": "",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "to_equipment_asset_circuit_id",
									"value": "",
									"description": "nullable|exists:equipment_assets_circuits,id",
									"type": "text"
								},
								{
									"key": "from_equipment_asset_circuit_id",
									"value": "",
									"description": "nullable|exists:equipment_assets_circuits,id",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "1",
									"description": "nullable|exists:gases,id",
									"type": "text"
								},
								{
									"key": "gas_purity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "gas_quantity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled",
									"value": "10",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled_unit",
									"value": "NG",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Notes",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "recovery_equipment_id",
									"value": "1",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/gas_movements",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_movements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gas Movement.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"description": "required_with:owner_type|sometimes|int|exists:users,id|is_or_can:store,Goal",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "ServiceEventInstall",
									"description": "required_with:owner_id|morphable|ownable",
									"type": "text"
								},
								{
									"key": "to_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "from_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "to_equipment_asset_id",
									"value": "",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "from_equipment_asset_id",
									"value": "1",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "1",
									"description": "nullable|exists:gases,id",
									"type": "text"
								},
								{
									"key": "gas_purity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "gas_quantity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled",
									"value": "10",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled_unit",
									"value": "NG",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/gas_movements/:gas_movement",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_movements",
								":gas_movement"
							],
							"variable": [
								{
									"key": "gas_movement",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gas Movement.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/gas_movements/:gas_movement",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_movements",
								":gas_movement"
							],
							"variable": [
								{
									"key": "gas_movement",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gas Transfer",
			"item": [
				{
					"name": "Gas Transfer.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/gas_transfers",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_transfers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gas Transfer.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"description": "required_with:owner_type|sometimes|int|exists:users,id|is_or_can:store,Goal",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "ServiceEventInstall",
									"description": "required_with:owner_id|morphable|ownable",
									"type": "text"
								},
								{
									"key": "to_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "from_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "to_equipment_asset_id",
									"value": "",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "from_equipment_asset_id",
									"value": "1",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "1",
									"description": "nullable|exists:gases,id",
									"type": "text"
								},
								{
									"key": "gas_purity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "gas_quantity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled",
									"value": "10",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled_unit",
									"value": "NG",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/gas_transfers/:gas_transfer",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_transfers",
								":gas_transfer"
							],
							"variable": [
								{
									"key": "gas_transfer",
									"value": "16"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gas Transfer.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "to_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "from_cylinder_asset_id",
									"value": "",
									"description": "nullable|exists:cylinder_assets,id",
									"type": "text"
								},
								{
									"key": "to_equipment_asset_id",
									"value": "",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "from_equipment_asset_id",
									"value": "1",
									"description": "nullable|exists:equipment_assets,id",
									"type": "text"
								},
								{
									"key": "gas_id",
									"value": "1",
									"description": "nullable|exists:gases,id",
									"type": "text"
								},
								{
									"key": "gas_purity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "gas_quantity",
									"value": "100",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled",
									"value": "10",
									"description": "nullable|integer",
									"type": "text"
								},
								{
									"key": "vacuum_pulled_unit",
									"value": "NG",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Notes",
									"description": "nullable|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/gas_transfers/:gas_transfer",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"gas_transfers",
								":gas_transfer"
							],
							"variable": [
								{
									"key": "gas_transfer",
									"value": "16"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Goal",
			"item": [
				{
					"name": "Goal.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/goals",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/goals/:goal",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goals",
								":goal"
							],
							"variable": [
								{
									"key": "goal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"description": "sometimes|int|exists:users,id|is_or_can:store,Goal",
									"type": "text"
								},
								{
									"key": "goal_category_id",
									"value": "5",
									"description": "required|int|exists:goal_categories,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "A new goal",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A description",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "caption",
									"value": "A Caption",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Completed",
									"description": "required|string|in:On-Going,Completed",
									"type": "text"
								},
								{
									"key": "notification_time",
									"value": "02:00:00",
									"description": "nullable|required_with:days|date_format:H:i:s",
									"type": "text"
								},
								{
									"key": "notification_days",
									"value": "127",
									"description": "nullable|required_with:time|integer|max:255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/goals",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "goal_category_id",
									"value": "5",
									"description": "int|exists:goal_categories,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "A new goal",
									"description": "string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A description",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "caption",
									"value": "A Caption",
									"description": "nullable|string",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Completed",
									"description": "required|string|in:On-Going,Completed",
									"type": "text"
								},
								{
									"key": "notification_time",
									"value": "02:00:00",
									"description": "nullable|required_with:days|date_format:H:i:s",
									"type": "text"
								},
								{
									"key": "notification_days",
									"value": "127",
									"description": "nullable|required_with:time|integer|max:255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/goals/:goal",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goals",
								":goal"
							],
							"variable": [
								{
									"key": "goal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/goals/:goal",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goals",
								":goal"
							],
							"variable": [
								{
									"key": "goal",
									"value": "35"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Goal Category",
			"item": [
				{
					"name": "Goal Category.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "",
									"description": "required|string|unique:goal_categories",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/goal_categories",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goal_categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Category.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "",
									"description": "required|string|unique:goal_categories",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/goal_categories/:goal_category",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goal_categories",
								":goal_category"
							],
							"variable": [
								{
									"key": "goal_category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Category.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "",
									"description": "required|string|unique:goal_categories",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/goal_categories",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goal_categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Category.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "",
									"description": "required|string|unique:goal_categories",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/goal_categories/:goal_category",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goal_categories",
								":goal_category"
							],
							"variable": [
								{
									"key": "goal_category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Category.Update Copy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/goal_categories/:goal_category",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"goal_categories",
								":goal_category"
							],
							"variable": [
								{
									"key": "goal_category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Hero",
			"item": [
				{
					"name": "Hero.Show",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/heroes/:user_slug",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"heroes",
								":user_slug"
							],
							"variable": [
								{
									"key": "user_slug",
									"value": "chief-admin"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Leaderboard",
			"item": [
				{
					"name": "Leaderboard.Invoke",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/leaderboard?end_at=2021-09-16",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"leaderboard"
							],
							"query": [
								{
									"key": "end_at",
									"value": "2021-09-16"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recovery Equipment",
			"item": [
				{
					"name": "RecoveryEquipment.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/recovery_equipment/:recoveryequipment_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recovery_equipment",
								":recoveryequipment_id"
							],
							"variable": [
								{
									"key": "recoveryequipment_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RecoveryEquipment.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/recovery_equipment/:recoveryequipment_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recovery_equipment",
								":recoveryequipment_id"
							],
							"variable": [
								{
									"key": "recoveryequipment_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RecoveryEquipment.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"description": "required|exists:users,id",
									"type": "text"
								},
								{
									"key": "brand_name",
									"value": "RecoveryCo",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "model",
									"value": "T-802",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "certified_by",
									"value": "Kyle Reese",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "ED-209",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/recovery_equipment",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recovery_equipment"
							]
						}
					},
					"response": []
				},
				{
					"name": "RecoveryEquipment.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"description": "exists:users,id",
									"type": "text"
								},
								{
									"key": "brand_name",
									"value": "RecoveryCo",
									"description": "string",
									"type": "text"
								},
								{
									"key": "model",
									"value": "T-800",
									"description": "string",
									"type": "text"
								},
								{
									"key": "certified_by",
									"value": "Kyle Reese",
									"description": "string",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "ED-209",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/recovery_equipment",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recovery_equipment"
							]
						}
					},
					"response": []
				},
				{
					"name": "RecoveryEquipment.Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/recovery_equipment/:recoveryequipment_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recovery_equipment",
								":recoveryequipment_id"
							],
							"variable": [
								{
									"key": "recoveryequipment_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service Event",
			"item": [
				{
					"name": "Gas Charge",
					"item": [
						{
							"name": "Service Event.Gas Charge.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_charges",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_charges"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Gas Charge.Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_charges/:service_event_gas_charge_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_charges",
										":service_event_gas_charge_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_gas_charge_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Gas Charge.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"equipment_asset_id\" : \"1\",\r\n    \"gas_charges\" : [\r\n        {\r\n            \"from_cylinder_asset_id\" : \"1\",\r\n            \"to_equipment_asset_circuit_id\" : \"1\",\r\n            \"gas_quantity\" : \"200\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_charges",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_charges"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Service Event.Gas Charge.Store",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"equipment_asset_id\" : \"1\",\r\n    \"gas_charges\" : [\r\n        {\r\n            \"from_cylinder_asset_id\" : \"1\",\r\n            \"to_equipment_asset_circuit_id\" : \"1\",\r\n            \"gas_quantity\" : \"200\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{apiv1}}/service_events/:service_event/gas_charges",
											"host": [
												"{{apiv1}}"
											],
											"path": [
												"service_events",
												":service_event",
												"gas_charges"
											],
											"variable": [
												{
													"key": "service_event",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.16.0"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.19"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Aug 2021 17:31:33 GMT"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mobile.fmhero.com"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 5,\n    \"service_event_id\": 1,\n    \"equipment_asset_id\": 1,\n    \"created_at\": \"2021-08-09T17:31:33.000000Z\",\n    \"updated_at\": \"2021-08-09T17:31:33.000000Z\",\n    \"images\": [],\n    \"videos\": [],\n    \"gas_transfer\": {\n        \"id\": 34,\n        \"owner_type\": \"App\\\\Models\\\\ServiceEventGasCharge\",\n        \"owner_id\": 5,\n        \"recovery_equipment_id\": null,\n        \"created_at\": \"2021-08-09T17:31:33.000000Z\",\n        \"updated_at\": \"2021-08-09T17:31:33.000000Z\",\n        \"gas_amount_recovered_from_equipment_asset_circuits\": 0,\n        \"gas_amount_recovered_to_equipment_asset_circuits\": \"200\",\n        \"gas_amount_recovered_from_cylinder_assets\": \"200\",\n        \"gas_amount_recovered_to_cylinder_assets\": 0,\n        \"gas_movement_from_equipment_asset_circuits\": [],\n        \"gas_movement_to_equipment_asset_circuits\": [\n            {\n                \"id\": 18,\n                \"gas_transfer_id\": 34,\n                \"to_cylinder_asset_id\": null,\n                \"from_cylinder_asset_id\": 1,\n                \"from_equipment_asset_circuit_id\": null,\n                \"to_equipment_asset_circuit_id\": 1,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T17:31:33.000000Z\",\n                \"updated_at\": \"2021-08-09T17:31:33.000000Z\"\n            }\n        ],\n        \"gas_movement_from_cylinder_assets\": [\n            {\n                \"id\": 18,\n                \"gas_transfer_id\": 34,\n                \"to_cylinder_asset_id\": null,\n                \"from_cylinder_asset_id\": 1,\n                \"from_equipment_asset_circuit_id\": null,\n                \"to_equipment_asset_circuit_id\": 1,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T17:31:33.000000Z\",\n                \"updated_at\": \"2021-08-09T17:31:33.000000Z\"\n            }\n        ],\n        \"gas_movement_to_cylinder_assets\": [],\n        \"gas_charges\": [\n            {\n                \"id\": 18,\n                \"gas_transfer_id\": 34,\n                \"to_cylinder_asset_id\": null,\n                \"from_cylinder_asset_id\": 1,\n                \"from_equipment_asset_circuit_id\": null,\n                \"to_equipment_asset_circuit_id\": 1,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T17:31:33.000000Z\",\n                \"updated_at\": \"2021-08-09T17:31:33.000000Z\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Service Event.Gas Charge.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Leak Repair",
											"description": "required|in:Service,Leak Repair",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "nullable|required_without:actions_other|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "nullable|required_without:actions|required|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "This job exploded",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "verification_method",
											"value": "ALDS",
											"description": "nullable|required_without:verification_method_alternative|string|in:ALDS,Alternative,Bubble,Dye,Electronic,Evacuation,Halide,Pressure",
											"type": "text"
										},
										{
											"key": "verification_method_alternative",
											"value": "",
											"description": "nullable|required_without:verification_method|string",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_charges/:service_event_gas_charge_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_charges",
										":service_event_gas_charge_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_gas_charge_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Gas Charge.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_charges/:service_event_gas_charge_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_charges",
										":service_event_gas_charge_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_gas_charge_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Gas Recovery",
					"item": [
						{
							"name": "Service Event.Gas Recovery.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_recoveries"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Gas Recovery.Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries/:service_event_gas_recovery_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_recoveries",
										":service_event_gas_recovery_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_gas_recovery_id",
											"value": "63"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Gas Recovery.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"recovery_equipment_id\": \"1\",\r\n    \"gas_recoveries_from\" : [\r\n        {\r\n            \"from_equipment_asset_id\" : \"1\",\r\n            \"from_equipment_asset_circuit_id\" : \"1\",\r\n            \"gas_quantity\" : \"400\"\r\n        },\r\n        {\r\n            \"from_cylinder_asset_id\" : \"1\",\r\n            \"gas_quantity\" : \"400\"\r\n        }\r\n    ],\r\n    \"gas_recoveries_to\" : [\r\n        {\r\n            \"to_cylinder_asset_id\" : \"1\",\r\n            \"gas_quantity\" : \"200\"\r\n        },\r\n        {\r\n            \"to_cylinder_asset_id\" : \"2\",\r\n            \"gas_quantity\" : \"200\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_recoveries"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								},
								"description": "Used to do either do bulk recoveries or a recover from a single asset. The `from_equipment_asset_circuit_id` must correspond to its `from_equipment_asset_id`, otherwise a 404 will be thown. \r\n\r\nIf a single asset, the `from_equipment_asset_id` and `from_equipment_asset_circuit_id` should be passed outside of the `gas_recoveries_to` array (see example of \"Service Event.Gas Recovery.Store - Single Asset\" ). \r\n\r\nIf it is a bulk recovery, because there is no 1:1 relationship. The total gas deposited into the cylinders can also not exceed what is recovered from the cylinders or equipment assets."
							},
							"response": [
								{
									"name": "Service Event.Gas Recovery.Store - Single Asset",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"equipment_asset_id\": \"1\",\r\n    \"equipment_asset_circuit_id\": \"1\",\r\n    \"gas_recoveries_to\" : [\r\n        {\r\n            \"to_cylinder_asset_id\" : \"1\",\r\n            \"gas_quantity\" : \"200\"\r\n        },\r\n        {\r\n            \"to_cylinder_asset_id\" : \"2\",\r\n            \"gas_quantity\" : \"200\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries",
											"host": [
												"{{apiv1}}"
											],
											"path": [
												"service_events",
												":service_event",
												"gas_recoveries"
											],
											"variable": [
												{
													"key": "service_event",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.16.0"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.19"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Aug 2021 17:31:57 GMT"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mobile.fmhero.com"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 33,\n    \"service_event_id\": 1,\n    \"equipment_asset_id\": 1,\n    \"created_at\": \"2021-08-09T18:22:54.000000Z\",\n    \"updated_at\": \"2021-08-09T18:22:54.000000Z\",\n    \"images\": [],\n    \"videos\": [],\n    \"gas_transfer\": {\n        \"id\": 54,\n        \"owner_type\": \"App\\\\Models\\\\ServiceEventGasRecovery\",\n        \"owner_id\": 33,\n        \"recovery_equipment_id\": 1,\n        \"created_at\": \"2021-08-09T18:22:54.000000Z\",\n        \"updated_at\": \"2021-08-09T18:22:54.000000Z\",\n        \"gas_amount_recovered_from_equipment_asset_circuits\": \"400\",\n        \"gas_amount_recovered_to_equipment_asset_circuits\": 0,\n        \"gas_amount_recovered_from_cylinder_assets\": 0,\n        \"gas_amount_recovered_to_cylinder_assets\": \"400\",\n        \"gas_movement_from_equipment_asset_circuits\": [\n            {\n                \"id\": 29,\n                \"gas_transfer_id\": 54,\n                \"to_cylinder_asset_id\": 1,\n                \"from_cylinder_asset_id\": null,\n                \"from_equipment_asset_circuit_id\": 1,\n                \"to_equipment_asset_circuit_id\": null,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T18:22:54.000000Z\",\n                \"updated_at\": \"2021-08-09T18:22:54.000000Z\"\n            },\n            {\n                \"id\": 30,\n                \"gas_transfer_id\": 54,\n                \"to_cylinder_asset_id\": 2,\n                \"from_cylinder_asset_id\": null,\n                \"from_equipment_asset_circuit_id\": 1,\n                \"to_equipment_asset_circuit_id\": null,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T18:22:54.000000Z\",\n                \"updated_at\": \"2021-08-09T18:22:54.000000Z\"\n            }\n        ],\n        \"gas_movement_to_equipment_asset_circuits\": [],\n        \"gas_movement_from_cylinder_assets\": [],\n        \"gas_movement_to_cylinder_assets\": [\n            {\n                \"id\": 29,\n                \"gas_transfer_id\": 54,\n                \"to_cylinder_asset_id\": 1,\n                \"from_cylinder_asset_id\": null,\n                \"from_equipment_asset_circuit_id\": 1,\n                \"to_equipment_asset_circuit_id\": null,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T18:22:54.000000Z\",\n                \"updated_at\": \"2021-08-09T18:22:54.000000Z\"\n            },\n            {\n                \"id\": 30,\n                \"gas_transfer_id\": 54,\n                \"to_cylinder_asset_id\": 2,\n                \"from_cylinder_asset_id\": null,\n                \"from_equipment_asset_circuit_id\": 1,\n                \"to_equipment_asset_circuit_id\": null,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T18:22:54.000000Z\",\n                \"updated_at\": \"2021-08-09T18:22:54.000000Z\"\n            }\n        ],\n        \"gas_charges\": []\n    }\n}"
								},
								{
									"name": "Service Event.Gas Recovery.Store - Bulk Recovery",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"gas_recoveries\" : [\r\n        {\r\n            \"from_equipment_asset_id\": \"1\",\r\n            \"from_equipment_asset_circuit_id\": \"1\",\r\n            \"to_cylinder_asset_id\" : \"1\",\r\n            \"gas_quantity\" : \"200\"\r\n        },\r\n        {\r\n            \"from_equipment_asset_id\": \"2\",\r\n            \"from_equipment_asset_circuit_id\": \"2\",\r\n            \"to_cylinder_asset_id\" : \"2\",\r\n            \"gas_quantity\" : \"200\"\r\n        }\r\n\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries",
											"host": [
												"{{apiv1}}"
											],
											"path": [
												"service_events",
												":service_event",
												"gas_recoveries"
											],
											"variable": [
												{
													"key": "service_event",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.16.0"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.19"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Aug 2021 17:32:21 GMT"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mobile.fmhero.com"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 15,\n    \"service_event_id\": 1,\n    \"equipment_asset_id\": null,\n    \"created_at\": \"2021-08-09T17:32:21.000000Z\",\n    \"updated_at\": \"2021-08-09T17:32:21.000000Z\",\n    \"images\": [],\n    \"videos\": [],\n    \"gas_transfer\": {\n        \"id\": 36,\n        \"owner_type\": \"App\\\\Models\\\\ServiceEventGasRecovery\",\n        \"owner_id\": 15,\n        \"recovery_equipment_id\": null,\n        \"created_at\": \"2021-08-09T17:32:21.000000Z\",\n        \"updated_at\": \"2021-08-09T17:32:21.000000Z\",\n        \"gas_amount_recovered_from_equipment_asset_circuits\": \"200\",\n        \"gas_amount_recovered_to_equipment_asset_circuits\": 0,\n        \"gas_amount_recovered_from_cylinder_assets\": 0,\n        \"gas_amount_recovered_to_cylinder_assets\": \"200\",\n        \"gas_movement_from_equipment_asset_circuits\": [\n            {\n                \"id\": 20,\n                \"gas_transfer_id\": 36,\n                \"to_cylinder_asset_id\": 1,\n                \"from_cylinder_asset_id\": null,\n                \"from_equipment_asset_circuit_id\": 1,\n                \"to_equipment_asset_circuit_id\": null,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T17:32:21.000000Z\",\n                \"updated_at\": \"2021-08-09T17:32:21.000000Z\"\n            }\n        ],\n        \"gas_movement_to_equipment_asset_circuits\": [],\n        \"gas_movement_from_cylinder_assets\": [],\n        \"gas_movement_to_cylinder_assets\": [\n            {\n                \"id\": 20,\n                \"gas_transfer_id\": 36,\n                \"to_cylinder_asset_id\": 1,\n                \"from_cylinder_asset_id\": null,\n                \"from_equipment_asset_circuit_id\": 1,\n                \"to_equipment_asset_circuit_id\": null,\n                \"gas_quantity\": 200,\n                \"vacuum_pulled\": null,\n                \"vacuum_pulled_unit\": null,\n                \"notes\": null,\n                \"created_at\": \"2021-08-09T17:32:21.000000Z\",\n                \"updated_at\": \"2021-08-09T17:32:21.000000Z\"\n            }\n        ],\n        \"gas_charges\": []\n    }\n}"
								},
								{
									"name": "Service Event.Gas Recovery.Store - Unmatched Asset ID throwing 404",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"gas_recoveries\" : [\r\n        {\r\n            \"from_equipment_asset_id\": \"1\",\r\n            \"from_equipment_asset_circuit_id\": \"1\",\r\n            \"to_cylinder_asset_id\" : \"1\",\r\n            \"gas_quantity\" : \"200\"\r\n        },\r\n        {\r\n            \"from_equipment_asset_id\": \"3\",\r\n            \"from_equipment_asset_circuit_id\": \"2\",\r\n            \"to_cylinder_asset_id\" : \"2\",\r\n            \"gas_quantity\" : \"200\"\r\n        }\r\n\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries",
											"host": [
												"{{apiv1}}"
											],
											"path": [
												"service_events",
												":service_event",
												"gas_recoveries"
											],
											"variable": [
												{
													"key": "service_event",
													"value": "1"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.16.0"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.19"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Aug 2021 17:43:57 GMT"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "mobile.fmhero.com"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\EquipmentAssetCircuit] 2\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\",\n    \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Exceptions\\\\Handler.php\",\n    \"line\": 383,\n    \"trace\": [\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Exceptions\\\\Handler.php\",\n            \"line\": 332,\n            \"function\": \"prepareException\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Exceptions\\\\Handler\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Pipeline.php\",\n            \"line\": 51,\n            \"function\": \"render\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Exceptions\\\\Handler\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 130,\n            \"function\": \"handleException\",\n            \"class\": \"Illuminate\\\\Routing\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Middleware\\\\SubstituteBindings.php\",\n            \"line\": 50,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Routing\\\\Middleware\\\\SubstituteBindings\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Middleware\\\\ThrottleRequests.php\",\n            \"line\": 127,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Middleware\\\\ThrottleRequests.php\",\n            \"line\": 103,\n            \"function\": \"handleRequest\",\n            \"class\": \"Illuminate\\\\Routing\\\\Middleware\\\\ThrottleRequests\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Middleware\\\\ThrottleRequests.php\",\n            \"line\": 55,\n            \"function\": \"handleRequestUsingNamedLimiter\",\n            \"class\": \"Illuminate\\\\Routing\\\\Middleware\\\\ThrottleRequests\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Routing\\\\Middleware\\\\ThrottleRequests\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\app\\\\Http\\\\Middleware\\\\BearerToken.php\",\n            \"line\": 27,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"App\\\\Http\\\\Middleware\\\\BearerToken\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 103,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 697,\n            \"function\": \"then\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 672,\n            \"function\": \"runRouteWithinStack\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 636,\n            \"function\": \"runRoute\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 625,\n            \"function\": \"dispatchToRoute\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 166,\n            \"function\": \"dispatch\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 128,\n            \"function\": \"Illuminate\\\\Foundation\\\\Http\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest.php\",\n            \"line\": 21,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ConvertEmptyStringsToNull.php\",\n            \"line\": 31,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ConvertEmptyStringsToNull\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest.php\",\n            \"line\": 21,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TrimStrings.php\",\n            \"line\": 40,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TrimStrings\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ValidatePostSize.php\",\n            \"line\": 27,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ValidatePostSize\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance.php\",\n            \"line\": 86,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php\",\n            \"line\": 52,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Fruitcake\\\\Cors\\\\HandleCors\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\fideloper\\\\proxy\\\\src\\\\TrustProxies.php\",\n            \"line\": 57,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 167,\n            \"function\": \"handle\",\n            \"class\": \"Fideloper\\\\Proxy\\\\TrustProxies\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 103,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 141,\n            \"function\": \"then\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 110,\n            \"function\": \"sendRequestThroughRouter\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\Users\\\\Admin\\\\Code\\\\FMHero\\\\public\\\\index.php\",\n            \"line\": 52,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Service Event.Gas Recovery.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "{",
											"value": "",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "\"recovery_equipment_id\"",
											"value": " \"1\",",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "\"gas_recoveries_from\"",
											"value": " [",
											"description": "nullable|required_without:actions_other|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "{",
											"value": "",
											"description": "nullable|required_without:actions|required|string",
											"type": "text"
										},
										{
											"key": "\"equipment_asset_id\"",
											"value": " \"1\",",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "\"equipment_asset_circuit_id\"",
											"value": " \"1\",",
											"description": "nullable|required_without:verification_method_alternative|string|in:ALDS,Alternative,Bubble,Dye,Electronic,Evacuation,Halide,Pressure",
											"type": "text"
										},
										{
											"key": "\"gas_quantity\"",
											"value": " \"400\"",
											"description": "nullable|required_without:verification_method|string",
											"type": "text"
										},
										{
											"key": "},",
											"value": "",
											"type": "text"
										},
										{
											"key": "{",
											"value": "",
											"type": "text"
										},
										{
											"key": "\"cylinder_asset_id\"",
											"value": " \"1\",",
											"type": "text"
										},
										{
											"key": "\"gas_quantity\"",
											"value": " \"400\"",
											"type": "text"
										},
										{
											"key": "}",
											"value": "",
											"type": "text"
										},
										{
											"key": "],",
											"value": "",
											"type": "text"
										},
										{
											"key": "\"gas_recoveries_to\"",
											"value": " [",
											"type": "text"
										},
										{
											"key": "{",
											"value": "",
											"type": "text"
										},
										{
											"key": "\"cylinder_asset_id\"",
											"value": " \"1\",",
											"type": "text"
										},
										{
											"key": "\"gas_quantity\"",
											"value": " \"200\"",
											"type": "text"
										},
										{
											"key": "},",
											"value": "",
											"type": "text"
										},
										{
											"key": "{",
											"value": "",
											"type": "text"
										},
										{
											"key": "\"cylinder_asset_id\"",
											"value": " \"2\",",
											"type": "text"
										},
										{
											"key": "\"gas_quantity\"",
											"value": " \"200\"",
											"type": "text"
										},
										{
											"key": "}",
											"value": "",
											"type": "text"
										},
										{
											"key": "]",
											"value": "",
											"type": "text"
										},
										{
											"key": "}",
											"value": "",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries/:service_event_gas_recovery_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_recoveries",
										":service_event_gas_recovery_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_gas_recovery_id",
											"value": "43"
										}
									]
								},
								"description": "Same usage as the `store` method, but with a caveat that the supplied `gas_recoveries_from` array and `gas_recoveries_to` array will outright. This is to allow deleting an asset easily from a bulk gas recovery."
							},
							"response": []
						},
						{
							"name": "Service Event.Gas Recovery.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/gas_recoveries/:service_event_gas_recovery_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"gas_recoveries",
										":service_event_gas_recovery_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_gas_recovery_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Install",
					"item": [
						{
							"name": "Service Event.Install.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/installs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"installs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Install.Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/installs/:service_install_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"installs",
										":service_install_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_install_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Install.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "gas_id",
											"value": "1",
											"description": "required|int|exists:gases,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Install",
											"description": "required|string|in:Install,Re-Install,Retrofit",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "required_without:actions_other|string|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "required_without:actions|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "This job exploded",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "new_oil_type",
											"value": "AB",
											"description": "required|string|in:AB,POE,Mineral",
											"type": "text"
										},
										{
											"key": "new_factory_field_charge",
											"value": "20",
											"description": "required|integer",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/installs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"installs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Install.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "gas_id",
											"value": "1",
											"description": "int|exists:gases,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Install",
											"description": "string|in:Install,Re-Install,Retrofit",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "required_without:actions_other|string|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "required_without:actions|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "This job exploded",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "new_oil_type",
											"value": "AB",
											"description": "string|in:AB,POE,Mineral",
											"type": "text"
										},
										{
											"key": "new_factory_field_charge",
											"value": "20",
											"description": "integer",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/installs/:service_install_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"installs",
										":service_install_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_install_id",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Install.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/installs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"installs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Repair",
					"item": [
						{
							"name": "Service Event.Repair.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/repairs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"repairs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Repair.Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/repairs/:service_event_repair_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"repairs",
										":service_event_repair_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_repair_id",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Repair.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Leak Repair",
											"description": "required|in:Service,Leak Repair",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "nullable|required_without:actions_other|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "nullable|required_without:actions|required|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "This job exploded",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "verification_method",
											"value": "ALDS",
											"description": "nullable|required_if:type,Leak Repair|string|in:ALDS,Alternative,Bubble,Dye,Electronic,Evacuation,Halide,Pressure",
											"type": "text"
										},
										{
											"key": "verification_method_alternative",
											"value": "",
											"description": "nullable|string",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/repairs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"repairs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "46"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Repair.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Leak Repair",
											"description": "required|in:Service,Leak Repair",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "nullable|required_without:actions_other|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "nullable|required_without:actions|required|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "This job exploded",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "verification_method",
											"value": "ALDS",
											"description": "nullable|required_if:type,Leak Repair|string|in:ALDS,Alternative,Bubble,Dye,Electronic,Evacuation,Halide,Pressure",
											"type": "text"
										},
										{
											"key": "verification_method_alternative",
											"value": "",
											"description": "nullable|string",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/repairs/:service_event_repair_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"repairs",
										":service_event_repair_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_repair_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Repair.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/repairs/:service_event_repair_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"repairs",
										":service_event_repair_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_repair_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Leak Inspection",
					"item": [
						{
							"name": "Service Event.Leak Inspection.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/leak_inspections",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"leak_inspections"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Leak Inspection.Show Copy",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/leak_inspections/:service_event_leak_inspection_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"leak_inspections",
										":service_event_leak_inspection_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_leak_inspection_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Leak Inspection.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "nullable|required_without:actions_other|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "nullable|required_without:actions|required|string",
											"type": "text"
										},
										{
											"key": "detection_method",
											"value": "Alternative",
											"description": "nullable|required_without:detection_method_other|in:Alternative,Bubble,Dye,Electronic Ultrasonic,Evacuate,Pressure Test,Halide",
											"type": "text"
										},
										{
											"key": "detection_method_other",
											"value": "",
											"description": "nullable|required_without:detection_method",
											"type": "text"
										},
										{
											"key": "alds_used",
											"value": "1",
											"description": "required|boolean",
											"type": "text"
										},
										{
											"key": "alds_type",
											"value": "Indirect",
											"description": "required_if:alds_used,true|nullable|in:Direct,Indirect",
											"type": "text"
										},
										{
											"key": "alds_model",
											"value": "A Model",
											"description": "required_if:alds_used,true|nullable|string",
											"type": "text"
										},
										{
											"key": "leak_found",
											"value": "1",
											"type": "text"
										},
										{
											"key": "leak_cause",
											"value": "",
											"description": "required_if:leak_found,1|nullable|in:Rub Out,Joint Failure,Corrosion,Vibration,Abuse,Warranty,Seal Failure,Rupture,Catastrophe,Mechanical Failure,ALDS",
											"type": "text"
										},
										{
											"key": "leak_corrective_action",
											"value": "Scheduled Repair",
											"description": "required_if:leak_found,1|nullable|in:Notify Engineering,Scheduled Repair,Removed From Service,Planned Retrofit,Waiting On Parts",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "some notes",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "inspection_at",
											"value": "2020-05-05",
											"description": "required|date",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/leak_inspections",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"leak_inspections"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Leak Inspection.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Wrenches",
											"description": "string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "",
											"description": "nullable|required_without:actions_other|in:Bypass,Calibrate/Adjust,New Cap/Seal,Relocate,Remove,Repair,Replace,Tighten,Weld,Other",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "Other Action",
											"description": "nullable|required_without:actions|required|string",
											"type": "text"
										},
										{
											"key": "detection_method",
											"value": "Alternative",
											"description": "nullable|required_without:detection_method_other|in:Alternative,Bubble,Dye,Electronic Ultrasonic,Evacuate,Pressure Test,Halide",
											"type": "text"
										},
										{
											"key": "detection_method_other",
											"value": "",
											"description": "nullable|required_without:detection_method",
											"type": "text"
										},
										{
											"key": "alds_used",
											"value": "1",
											"description": "boolean",
											"type": "text"
										},
										{
											"key": "alds_type",
											"value": "Indirect",
											"description": "required_if:alds_used,true|nullable|in:Direct,Indirect",
											"type": "text"
										},
										{
											"key": "alds_model",
											"value": "A Model",
											"description": "required_if:alds_used,true|nullable|string",
											"type": "text"
										},
										{
											"key": "leak_found",
											"value": "1",
											"type": "text"
										},
										{
											"key": "leak_cause",
											"value": "ALDS",
											"description": "required_if:leak_found,1|nullable|in:Rub Out,Joint Failure,Corrosion,Vibration,Abuse,Warranty,Seal Failure,Rupture,Catastrophe,Mechanical Failure,ALDS",
											"type": "text"
										},
										{
											"key": "leak_corrective_action",
											"value": "Scheduled Repair",
											"description": "required_if:leak_found,1|nullable|in:Notify Engineering,Scheduled Repair,Removed From Service,Planned Retrofit,Waiting On Parts",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "some notes",
											"description": "nullable|string",
											"type": "text"
										},
										{
											"key": "inspection_at",
											"value": "2020-05-05",
											"description": "date",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/leak_inspections/:service_event_leak_inspection_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"leak_inspections",
										":service_event_leak_inspection_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_leak_inspection_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Leak Inspection.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/leak_inspections/:service_event_leak_inspection_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"leak_inspections",
										":service_event_leak_inspection_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_leak_inspection_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Scrap",
					"item": [
						{
							"name": "Service Event.Scrap.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Scrap.Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs/:service_shutdown_mothball_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs",
										":service_shutdown_mothball_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_shutdown_mothball_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Scrap.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Remove",
											"description": "required|string|in:Remove,Replace,Other",
											"type": "text"
										},
										{
											"key": "is_flat",
											"value": "1",
											"description": "nullable|required_without:actions|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Some notes",
											"description": "nullable|string",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/scraps",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"scraps"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Scrap.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Remove",
											"description": "required|string|in:Remove,Replace,Other",
											"type": "text"
										},
										{
											"key": "is_flat",
											"value": "1",
											"description": "nullable|required_without:actions|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Some notes",
											"description": "nullable|string",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/scraps/:service_event_scrap_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"scraps",
										":service_event_scrap_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_scrap_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Scrap.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/scraps/:service_event_scrap_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"scraps",
										":service_event_scrap_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_event_scrap_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Shutdown Mothball",
					"item": [
						{
							"name": "Service Event.Shutdown Mothball.Index",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Shutdown Mothball.Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs/:service_shutdown_mothball_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs",
										":service_shutdown_mothball_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_shutdown_mothball_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Shutdown Mothball.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Shutdown",
											"description": "required|in:Shutdown,Mothball",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Bolts",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "Other",
											"description": "nullable|required_without:actions_other|required|in:Other,Bypass,Relocate,Remove,Repair,Replace",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "",
											"description": "nullable|required_without:actions|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Some notes",
											"description": "nullable|string",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Shutdown Mothball.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "equipment_asset_id",
											"value": "1",
											"description": "required|exists:equipment_assets,id",
											"type": "text"
										},
										{
											"key": "type",
											"value": "Shutdown",
											"description": "in:Shutdown,Mothball",
											"type": "text"
										},
										{
											"key": "parts_required",
											"value": "Bolts",
											"description": "string",
											"type": "text"
										},
										{
											"key": "actions",
											"value": "Other",
											"description": "nullable|required_without:actions_other|required|in:Other,Bypass,Relocate,Remove,Repair,Replace",
											"type": "text"
										},
										{
											"key": "actions_other",
											"value": "",
											"description": "nullable|required_without:actions|string",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Some notes",
											"description": "nullable|string",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs/:service_shutdown_mothball_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs",
										":service_shutdown_mothball_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_shutdown_mothball_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Service Event.Shutdown Mothball.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/service_events/:service_event/shutdown_mothballs/:service_shutdown_mothball_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"service_events",
										":service_event",
										"shutdown_mothballs",
										":service_shutdown_mothball_id"
									],
									"variable": [
										{
											"key": "service_event",
											"value": "1"
										},
										{
											"key": "service_shutdown_mothball_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Service Event.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/service_events?start_at=2021-08-09&end_at=2021-08-10",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"service_events"
							],
							"query": [
								{
									"key": "start_at",
									"value": "2021-08-09"
								},
								{
									"key": "end_at",
									"value": "2021-08-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Service Event.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/service_events/:service_event",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"service_events",
								":service_event"
							],
							"variable": [
								{
									"key": "service_event",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Service Event.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": 1,\r\n    \"site_id\": 1,\r\n    \"work_order_number\": \"ABC123\",\r\n    \"purchase_order_number\": \"123ABC\",\r\n    \"external_reference_number\": \"#09876\",\r\n    \"event_description\": \"A Service Event\",\r\n    \"status\": \"Upcoming\",\r\n    \"start_at\": \"2021-05-10T17:06:00.000Z\",\r\n    \"end_at\": \"2025-06-06 12:00:00Z\",\r\n    \"contact_name\": \"Jim Bob\",\r\n    \"contact_email\": \"jimbomb@gascompany.com\",\r\n    \"contact_phone\": \"888-555-1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/service_events",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"service_events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Service Event.Complete",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": 1,\r\n    \"site_id\": 1,\r\n    \"work_order_number\": \"ABC123\",\r\n    \"purchase_order_number\": \"123ABC\",\r\n    \"external_reference_number\": \"#09876\",\r\n    \"event_description\": \"A Service Event\",\r\n    \"status\": \"Upcoming\",\r\n    \"start_at\": \"2021-05-10T17:06:00.000Z\",\r\n    \"end_at\": \"2025-06-06 12:00:00Z\",\r\n    \"contact_name\": \"Jim Bob\",\r\n    \"contact_email\": \"jimbomb@gascompany.com\",\r\n    \"contact_phone\": \"888-555-1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/service_events/:service_event_id/complete",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"service_events",
								":service_event_id",
								"complete"
							],
							"variable": [
								{
									"key": "service_event_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Service Event.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": 1,\r\n    \"site_id\": 1,\r\n    \"work_order_number\": \"ABC123\",\r\n    \"purchase_order_number\": \"123ABC\",\r\n    \"external_reference_number\": \"#09876\",\r\n    \"event_description\": \"A Service Event\",\r\n    \"status\": \"Upcoming\",\r\n    \"start_at\": \"2025-05-05 12:00:00\",\r\n    \"end_at\": \"2025-06-06 12:00:00\",\r\n    \"contact_name\": \"Jim Bob\",\r\n    \"contact_email\": \"jimbomb@gascompany.com\",\r\n    \"contact_phone\": \"888-555-1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/service_events/:service_event",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"service_events",
								":service_event"
							],
							"variable": [
								{
									"key": "service_event",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Service Event.Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/service_events/:service_event",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"service_events",
								":service_event"
							],
							"variable": [
								{
									"key": "service_event",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Site",
			"item": [
				{
					"name": "Site.Index",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Site",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/sites?radius=1",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"sites"
							],
							"query": [
								{
									"key": "radius",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Site.Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Site",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/sites/:site_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"sites",
								":site_id"
							],
							"variable": [
								{
									"key": "site_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Site.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\" : \"test\",\r\n\t\"address\" : {\r\n        \"name\" : \"primary\",\r\n\t\t\"province\": \"NY\",\r\n        \"line1\" : \"123 Fake Street\",\r\n        \"line2\" : \"Unit 123\",\r\n        \"city\" : \"Springfield\",\r\n        \"postal_code\" : \"H0H 0H0\",\r\n\t\t\"country\" : \"USA\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/sites",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Site.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\" : \"test\",\r\n\t\"address\" : {\r\n        \"name\" : \"primary\",\r\n\t\t\"province\": \"NY\",\r\n        \"line1\" : \"123 Fake Street\",\r\n        \"line2\" : \"Unit 123\",\r\n        \"city\" : \"Springfield\",\r\n        \"postal_code\" : \"H0H 0H0\",\r\n\t\t\"country\" : \"USA\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiv1}}/sites/:site_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"sites",
								":site_id"
							],
							"variable": [
								{
									"key": "site_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Site.Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Site",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/sites/:site_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"sites",
								":site_id"
							],
							"variable": [
								{
									"key": "site_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Account.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/accounts?filter[id][min]=1&filter[id][max]=3",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "filter[id][min]",
									"value": "1"
								},
								{
									"key": "filter[id][max]",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/accounts/:account_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account.Store",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/accounts",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/accounts/:accounts_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"accounts",
								":accounts_id"
							],
							"variable": [
								{
									"key": "accounts_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/accounts/:accounts_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"accounts",
								":accounts_id"
							],
							"variable": [
								{
									"key": "accounts_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ability",
			"item": [
				{
					"name": "Ability.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/abilities",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"abilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ability.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/abilities/:ability_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"abilities",
								":ability_id"
							],
							"variable": [
								{
									"key": "ability_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ability.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "privilege_id",
									"value": "",
									"description": "required|int|exists:privileges,id",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "model_id",
									"value": "",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "model_type",
									"value": "",
									"description": "required|nullable|morphable",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/abilities",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"abilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ability.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/abilities/:ability_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"abilities",
								":ability_id"
							],
							"variable": [
								{
									"key": "ability_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ability.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/abilities/:ability_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"abilities",
								":ability_id"
							],
							"variable": [
								{
									"key": "ability_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "Address.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/addresses",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Address.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/addresses/:address_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"addresses",
								":address_id"
							],
							"variable": [
								{
									"key": "address_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Address.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "User",
									"type": "text"
								},
								{
									"key": "line1",
									"value": "123 Fake Street",
									"type": "text"
								},
								{
									"key": "line2",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "city",
									"value": "Placeville",
									"type": "text"
								},
								{
									"key": "province",
									"value": "NY",
									"description": "required|province",
									"type": "text"
								},
								{
									"key": "country",
									"value": "USA",
									"description": "required|country",
									"type": "text"
								},
								{
									"key": "postal_code",
									"value": "123456",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/addresses",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Address.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "line1",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "line2",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "city",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "province",
									"value": "ON",
									"type": "text"
								},
								{
									"key": "country",
									"value": "USA",
									"type": "text"
								},
								{
									"key": "postal_code",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "owner_id",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "owner_type",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/addresses/:address_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"addresses",
								":address_id"
							],
							"variable": [
								{
									"key": "address_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Address.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/addresses/:address_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"addresses",
								":address_id"
							],
							"variable": [
								{
									"key": "address_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Image",
			"item": [
				{
					"name": "Image.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/images",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Image.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/images/:image_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"images",
								":image_id"
							],
							"variable": [
								{
									"key": "image_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Image.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "owner_id",
									"value": "1",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "User",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "image",
									"description": "required|image",
									"type": "file",
									"src": "/C:/Users/Admin/Pictures/83776498_458158065091916_5770713583549677568_n.jpg"
								},
								{
									"key": "name",
									"value": "avatar",
									"description": "required|unique:images,name",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/images",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Image.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "avatar",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "User",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/images/:image_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"images",
								":image_id"
							],
							"variable": [
								{
									"key": "image_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Image.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/images/:image_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"images",
								":image_id"
							],
							"variable": [
								{
									"key": "image_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Identity",
			"item": [
				{
					"name": "Identity.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/identities",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/identities/:identity_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities",
								":identity_id"
							],
							"variable": [
								{
									"key": "identity_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"description": "sometimes|exists:users,id",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "primary",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "email",
									"description": "required|in:email,mobile,oauth",
									"type": "text"
								},
								{
									"key": "value",
									"value": "admin@fmhero.com",
									"description": "required|unique:identities,value|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/identities",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "tyler+foo@chopdawg.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/identities/:identity_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities",
								":identity_id"
							],
							"variable": [
								{
									"key": "identity_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity.Verification",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "type",
									"value": "token",
									"description": "required|string|in:code,token",
									"type": "text"
								},
								{
									"key": "value",
									"value": "da70ba7c83901dbe4b869557f44d719dad7f4819",
									"description": "required|string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/identities/:identity_id/verification",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities",
								":identity_id",
								"verification"
							],
							"variable": [
								{
									"key": "identity_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity.Recovery",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "Mwau9akOYmzI5E4nV4qJCyu4fm6aBWEI",
									"description": "required|string|size:32",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/identities/:identity_id/recovery",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities",
								":identity_id",
								"recovery"
							],
							"variable": [
								{
									"key": "identity_id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/identities/:identity_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"identities",
								":identity_id"
							],
							"variable": [
								{
									"key": "identity_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Meta",
			"item": [
				{
					"name": "Integer",
					"item": [
						{
							"name": "Meta.Integer.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/integers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"integers"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.Integer.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/integers/:meta_integer_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"integers",
										":meta_integer_id"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										},
										{
											"key": "meta_integer_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.Integer.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "1234567890",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/integers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"integers"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.Integer.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "1234567890",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/integers/:meta_integer_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"integers",
										":meta_integer_id"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										},
										{
											"key": "meta_integer_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.Integer.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/integers/:meta_integer_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"integers",
										":meta_integer_id"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										},
										{
											"key": "meta_integer_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "String",
					"item": [
						{
							"name": "Meta.String.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/strings",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"strings"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.String.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/strings/:meta_string_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"strings",
										":meta_string_id"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										},
										{
											"key": "meta_string_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.String.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "hello world",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/strings",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"strings"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.String.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "hello world",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/strings/:meta_string_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"strings",
										":meta_string_id"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										},
										{
											"key": "meta_string_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Meta.String.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/metas/:meta_id/strings/:meta_string_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"metas",
										":meta_id",
										"strings",
										":meta_string_id"
									],
									"variable": [
										{
											"key": "meta_id",
											"value": "1"
										},
										{
											"key": "meta_string_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Meta.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/metas",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"metas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Meta.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/metas/:meta_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"metas",
								":meta_id"
							],
							"variable": [
								{
									"key": "meta_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Meta.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "some_meta_name",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "User",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/metas",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"metas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Meta.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "line1",
									"value": "",
									"type": "text"
								},
								{
									"key": "line2",
									"value": "",
									"type": "text"
								},
								{
									"key": "city",
									"value": "",
									"type": "text"
								},
								{
									"key": "province",
									"value": "",
									"type": "text"
								},
								{
									"key": "postal_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "owner_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/metas/:meta_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"metas",
								":meta_id"
							],
							"variable": [
								{
									"key": "meta_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Meta.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/metas/:meta_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"metas",
								":meta_id"
							],
							"variable": [
								{
									"key": "meta_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OAuth",
			"item": [
				{
					"name": "Show.Provider",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/oauth/providers/:provider",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"oauth",
								"providers",
								":provider"
							],
							"variable": [
								{
									"key": "provider",
									"value": "github"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Privilege",
			"item": [
				{
					"name": "Privilege.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/privileges",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"privileges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Privilege.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/privileges/:privilege_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"privileges",
								":privilege_id"
							],
							"variable": [
								{
									"key": "privilege_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Privilege.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "root",
									"description": "required|string|unique:privileges,name",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/privileges",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"privileges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Privilege.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/privileges/:privilege_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"privileges",
								":privilege_id"
							],
							"variable": [
								{
									"key": "privilege_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Privilege.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/privileges/:privilege_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"privileges",
								":privilege_id"
							],
							"variable": [
								{
									"key": "privilege_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "Entry",
					"item": [
						{
							"name": "Profile.Entry.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/entries",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"entries"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Entry.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "entries[0][type]",
											"value": "float",
											"description": "required|string|in:float,integer,string,text",
											"type": "text"
										},
										{
											"key": "entries[0][name]",
											"value": "tv price",
											"type": "text"
										},
										{
											"key": "entries[0][value]",
											"value": "5342.75",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/entries",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"entries"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Float",
					"item": [
						{
							"name": "Profile.Float.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/floats",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"floats"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Float.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/floats/:float_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"floats",
										":float_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "float_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Float.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "weight",
											"type": "text"
										},
										{
											"key": "value",
											"value": "79.38",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/floats",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"floats"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Float.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "profile_id",
											"value": "155",
											"description": "exists:profiles,id",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"description": "string",
											"type": "text"
										},
										{
											"key": "value",
											"value": "",
											"description": "numeric",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/floats/:float_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"floats",
										":float_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "float_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Float.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/floats/:float_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"floats",
										":float_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "float_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Integer",
					"item": [
						{
							"name": "Profile.Integer.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/integers",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"integers"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Integer.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/integers/:integer_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"integers",
										":integer_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "integer_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Integer.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "weight",
											"type": "text"
										},
										{
											"key": "value",
											"value": "79",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/integer",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"integer"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Integer.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "profile_id",
											"value": "155",
											"description": "exists:profiles,id",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"description": "string",
											"type": "text"
										},
										{
											"key": "value",
											"value": "",
											"description": "numeric",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/integers/:integer_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"integers",
										":integer_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "integer_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Integer.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/integers/:integer_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"integers",
										":integer_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "integer_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "String",
					"item": [
						{
							"name": "Profile.String.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/strings",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"strings"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.String.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/strings/:string_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"strings",
										":string_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "string_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.String.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "weight",
											"type": "text"
										},
										{
											"key": "value",
											"value": "79.38",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/strings",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"strings"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.String.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "profile_id",
											"value": "155",
											"description": "exists:profiles,id",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"description": "string",
											"type": "text"
										},
										{
											"key": "value",
											"value": "",
											"description": "numeric",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/strings/:string_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"strings",
										":string_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "string_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.String.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/strings/:string_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"strings",
										":string_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "string_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Text",
					"item": [
						{
							"name": "Profile.Text.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/texts",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"texts"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Text.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/texts/:text_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"texts",
										":text_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "text_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Text.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "weight",
											"type": "text"
										},
										{
											"key": "value",
											"value": "79.38",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/texts",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"texts"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Text.Update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "profile_id",
											"value": "155",
											"description": "exists:profiles,id",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"description": "string",
											"type": "text"
										},
										{
											"key": "value",
											"value": "",
											"description": "numeric",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/texts/:text_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"texts",
										":text_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "text_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile.Text.Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/profiles/:profile_id/texts/:text_id",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"profiles",
										":profile_id",
										"texts",
										":text_id"
									],
									"variable": [
										{
											"key": "profile_id",
											"value": "1"
										},
										{
											"key": "text_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Profile.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/profiles",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/profiles/:profile_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"profiles",
								":profile_id"
							],
							"variable": [
								{
									"key": "profile_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "User",
									"description": "required|morphable",
									"type": "text"
								},
								{
									"key": "name",
									"value": "primary",
									"description": "required|string|unique:profiles,name",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/profiles",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "owner_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "owner_type",
									"value": "User",
									"type": "text"
								},
								{
									"key": "name",
									"value": "primary",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/profiles/:profile_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"profiles",
								":profile_id"
							],
							"variable": [
								{
									"key": "profile_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/profiles/:profile_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"profiles",
								":profile_id"
							],
							"variable": [
								{
									"key": "profile_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recovery",
			"item": [
				{
					"name": "Recovery.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/recoveries",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recoveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Recovery.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/recoveries/:recovery_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recoveries",
								":recovery_id"
							],
							"variable": [
								{
									"key": "recovery_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Recovery.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "identity_id",
									"value": "1",
									"description": "required|int|exists:identities,id",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "email",
									"type": "text"
								},
								{
									"key": "value",
									"value": "tyler+hello@chopdawg.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/recoveries",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recoveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Recovery.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "Mwau9akOYmzI5E4nV4qJCyu4fm6aBWEI",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/recoveries/:recovery_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recoveries",
								":recovery_id"
							],
							"variable": [
								{
									"key": "recovery_id",
									"value": "31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Recovery.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/recoveries/:recovery_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"recoveries",
								":recovery_id"
							],
							"variable": [
								{
									"key": "recovery_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sanctum Csrf",
			"item": [
				{
					"name": "Csrf.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api}}/sanctum/csrf-cookie",
							"host": [
								"{{api}}"
							],
							"path": [
								"sanctum",
								"csrf-cookie"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Secret",
			"item": [
				{
					"name": "Secret.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/secrets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Secret.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/secrets/:secret_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "secret_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Secret.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"description": "required|exists:users,id",
									"type": "text"
								},
								{
									"key": "type",
									"value": "password",
									"description": "required|in:password,totp",
									"type": "text"
								},
								{
									"key": "value",
									"value": "password",
									"description": "required|string",
									"type": "text"
								},
								{
									"key": "value_confirmation",
									"value": "password",
									"description": "required|string|matches:value",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/users/me/secrets",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users",
								"me",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Secret.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "tyler+foo@chopdawg.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/secrets/:secret_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "secret_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Secret.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/secrets/:secret_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "secret_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Token",
			"item": [
				{
					"name": "Token.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/tokens",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Token.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/tokens/:token_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"tokens",
								":token_id"
							],
							"variable": [
								{
									"key": "token_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Token.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "identity[type]",
									"value": "email",
									"type": "text"
								},
								{
									"key": "identity[value]",
									"value": "admin@fmhero.com",
									"type": "text"
								},
								{
									"key": "secret[type]",
									"value": "password",
									"type": "text"
								},
								{
									"key": "secret[value]",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/tokens",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Token.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "tokenable_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "tokenable_type",
									"value": "User",
									"type": "text"
								},
								{
									"key": "name",
									"value": "MyToken",
									"type": "text"
								},
								{
									"key": "abilities[]",
									"value": "*",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/tokens/:token_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"tokens",
								":token_id"
							],
							"variable": [
								{
									"key": "token_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Token.Update Copy",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "tokenable_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "tokenable_type",
									"value": "User",
									"type": "text"
								},
								{
									"key": "name",
									"value": "MyToken",
									"type": "text"
								},
								{
									"key": "abilities[]",
									"value": "*",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/tokens/:token_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"tokens",
								":token_id"
							],
							"variable": [
								{
									"key": "token_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Token.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/tokens/:token_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"tokens",
								":token_id"
							],
							"variable": [
								{
									"key": "token_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Identity",
					"item": [
						{
							"name": "User.Identity.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/users/:user_id/identities",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"users",
										":user_id",
										"identities"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User.Identity.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "password",
											"description": "required|in:password,totp",
											"type": "text"
										},
										{
											"key": "value",
											"value": "pa55word",
											"description": "required|string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/users/:user_id/identities",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"users",
										":user_id",
										"identities"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "me"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Secret",
					"item": [
						{
							"name": "User.Secret.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/users/:user_id/secrets",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"users",
										":user_id",
										"secrets"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User.Secret.Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "password",
											"description": "required|in:password,totp",
											"type": "text"
										},
										{
											"key": "value",
											"value": "password",
											"description": "required|string",
											"type": "text"
										},
										{
											"key": "value_confirmation",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiv1}}/secrets",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Service Event",
					"item": [
						{
							"name": "User.Service Event.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/users/:user/service_events",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"users",
										":user",
										"service_events"
									],
									"variable": [
										{
											"key": "user",
											"value": "me"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User.Service Event.Show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/users/:user/service_events/:service_event",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"users",
										":user",
										"service_events",
										":service_event"
									],
									"variable": [
										{
											"key": "user",
											"value": "me"
										},
										{
											"key": "service_event",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Badge",
					"item": [
						{
							"name": "User.Badge.Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiv1}}/users/:user_id/badges",
									"host": [
										"{{apiv1}}"
									],
									"path": [
										"users",
										":user_id",
										"badges"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/users?hide_relationships=true&hide_attributes=true",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "hide_relationships",
									"value": "true"
								},
								{
									"key": "hide_attributes",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/users/:user_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "account_id",
									"value": "3",
									"description": "int|exists:accounts,id|can:attach,Account",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/users",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "User.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "account_id",
									"value": "1",
									"description": "int|exists:accounts,id",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "Johnny",
									"type": "text"
								},
								{
									"key": "middle_name",
									"value": "H.",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "Doe",
									"type": "text"
								},
								{
									"key": "superhero_name",
									"value": "A test 2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/users/:user_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "me"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/users/:user_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Video",
			"item": [
				{
					"name": "Video.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/videos",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"videos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Video.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/videos/:video_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"videos",
								":video_id"
							],
							"variable": [
								{
									"key": "video_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Video.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{apiv1}}/videos",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"videos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Video.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "tyler+foo@chopdawg.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/videos/:video_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"videos",
								":video_id"
							],
							"variable": [
								{
									"key": "video_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Video.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/videos/:video_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"videos",
								":video_id"
							],
							"variable": [
								{
									"key": "video_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verification",
			"item": [
				{
					"name": "Verification.Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/verifications",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"verifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verification.Show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/verifications/:verification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"verifications",
								":verification_id"
							],
							"variable": [
								{
									"key": "verification_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verification.Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "identity_id",
									"value": "1",
									"description": "required|exists:identities,id",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/verifications",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"verifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verification.Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "535145521",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{apiv1}}/verifications/:verification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"verifications",
								":verification_id"
							],
							"variable": [
								{
									"key": "verification_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verification.Destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiv1}}/verifications/:verification_id",
							"host": [
								"{{apiv1}}"
							],
							"path": [
								"verifications",
								":verification_id"
							],
							"variable": [
								{
									"key": "verification_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({",
					"    key: 'X-Requested-With',",
					"    value: 'XMLHttpRequest'",
					"});",
					"",
					"pm.request.headers.add({",
					"    key: 'Origin',",
					"    value: 'mobile.fmhero.com'",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiv1",
			"value": "http://api.fmhero.test/v1"
		},
		{
			"key": "api",
			"value": ""
		}
	]
}